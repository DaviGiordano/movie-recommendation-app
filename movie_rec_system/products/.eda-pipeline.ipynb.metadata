{"timestamp": 1698766921.667036, "stored_source_code": "# declare a list tasks whose products you want to use as inputs\nupstream = None\n\nimport duckdb\npath = \"./movies_data.duckdb\"\n\n# Setup\n%reload_ext sql\n%config SqlMagic.displaylimit = 20\nconn = duckdb.connect(path, read_only=False)\n%sql conn --alias duckdb\n# Tables\n%sql SHOW TABLES\n%%sql \n-- # Get columns from movies\nSELECT column_name\nFROM INFORMATION_SCHEMA.COLUMNS\nWHERE TABLE_NAME = N'movies'\n# Get genres table\n%sql select * from genres\n%%sql\n-- # Getting genre names per movie\nWITH ExpandedGenres AS (\n    SELECT \n        m.id AS movie_id,\n        mg.movie_genre_id,\n        g.name AS genre_name\n    FROM \n        (SELECT UNNEST(movies.genre_ids) as movie_genre_id, movies.id FROM movies) AS mg\n    JOIN \n        movies m ON mg.id = m.id\n    JOIN \n        genres g ON mg.movie_genre_id = g.id\n)\n\nSELECT\n    movie_id,\n    STRING_AGG(genre_name, ', ') AS genre_names\nFROM \n    ExpandedGenres\nGROUP BY \n    movie_id;\n%%sql\n-- # Creating table with movie and genre information\nCREATE TABLE IF NOT EXISTS movie_genre_data AS\nWITH ExpandedGenres AS (\n    SELECT \n        m.id AS movie_id,\n        mg.movie_genre_id,\n        g.name AS genre_name\n    FROM \n        (SELECT UNNEST(movies.genre_ids) as movie_genre_id, movies.id FROM movies) AS mg\n    JOIN \n        movies m ON mg.id = m.id\n    JOIN \n        genres g ON mg.movie_genre_id = g.id\n),\ngenre_names AS (\n    SELECT\n    movie_id,\n    STRING_AGG(genre_name, ', ') AS genre_names\nFROM \n    ExpandedGenres\nGROUP BY \n    movie_id\n)\nSELECT gn.genre_names, m.id, m.original_language,\n       m.overview, m.popularity, m.release_date,\n       m.title, m.vote_average, m.vote_count\nFROM genre_names gn\nJOIN movies m\nON gn.movie_id = m.id\nWHERE m.vote_count != 0\n%%sql\nSELECT *\nFROM movie_genre_data\nLIMIT 2;\n## Exploratory Analysis\n* What are the most popular genres?\n* What are the most popular movies?\n* What are the most popular movies by genre?\n* What are the most popular movies by year?\n* What are the most popular movies by decade?\n* What are the most popular movies by genre and decade?\n## Most popular movies by genre\n* Explode movies on genre_id\n* Group by genre_id and sum popularity\n* Join with genres tables to get the names\n* Order genres by popularity\n%%sql \nWITH ExpandedGenres AS (\n    SELECT \n        m.id AS movie_id,\n        mg.movie_genre_id,\n        g.name AS genre_name,\n        m.popularity AS popularity,\n    FROM \n        (SELECT UNNEST(movies.genre_ids) as movie_genre_id, movies.id FROM movies) AS mg\n    JOIN \n        movies m ON mg.id = m.id\n    JOIN \n        genres g ON mg.movie_genre_id = g.id\n)\n\nSELECT\n    genre_name, ROUND(SUM(popularity)) AS TotalPopularity\nFROM \n    ExpandedGenres\nGROUP BY\n    genre_name\nORDER BY TotalPopularity DESC\nLIMIT 5;\n\n## Most popular movies\n%%sql\nSELECT title, popularity\nFROM movies\nORDER BY popularity DESC\nLIMIT 5;\n### Do the other ones later", "params": {}}